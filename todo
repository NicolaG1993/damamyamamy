robots.txt and manifest.json 🧠
old version damamyamamy-web: creare nuova branch per gitHub, diversa da master che sará invece quella per questa versione del progetto 🐲
controllare SEO e google analytics (dovrebbe chiamarsi cosi) 🧠
fare tutti gli head necessari 🐲
attivare e testare servizi di pagamento 🧠 per paypal credo che sono ancora dal mio profilo, controllare e sistemare tutto per sicurezza ⚠
in Amplify vedo che backend status deploy non si aggiorna da quando sono passato a next, forse perché ho eliminato il folder di AWS, come ricollegare? 🧠
aggiornare info sito web su facebook, IG, google business 🧠

rendere il bottone di colormode statico, con next il layout mi si aggiorna ad ogni richiesta per qualche motivo, e non dovrebbe 🐲
inoltre lo style del button é sfasato per small devices 🐲


🐲ottimizare immagini
cercare icons e img da envato

--------------------------------------------------
⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠


Ho riscontrato un bug con commerce.js, praticamente se metto nel carrello un elemento che viene poi eliminato prima del mio aquisto non posso accedere a cart perché mi da errore, essendoci un oggetto ma con tutti i suoi valori "null"
Potrebbe essere che gli elementi devono restare in commerce ma con la quantita disponibile = 0? questo non lo so
Peró ho creato una funzione*🪁 che fa un check ogni volta che apro cart, non super cool ma sembra funzionare
Quando avró creato un API dovró sistemare questa funzione in cart, perché funziona solo per commerce, essendoci il problema fra item_id di shop e prod_id di cart 

*🪁In Cart uso una funzione (forse meglio un util?) che onComponentMount fa un loop di tutti gli items in cart, fra tutti quelli in data, li compari per esclusione
ed elimini (via redux action?) tutti quelli non piú disponibili in data

⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠ ⚠
--------------------------------------------------


⚠ ⚠ ⚠ ⚠ ⚠
ovviamente per il futuro dovró creare un database per shop, un api per cart, interfaccia admin con autorizzazione per gestire shop
il tutto collegato al catalogo del negozio (con dati di venditore e acquirente, scadenza 60 giorni) e dall`acquisto in negozio




--------------------------------------------------
DICEMBRE 2021
--------------------------------------------------

• aggiungere database psql (items, orders, users) 👍
• aggiungere auth per users 👍
• aggiungere admin dashboard 👍
• migrare da commerce.js, non usarlo piú 👍
• gestire cart in state 👍
• infine sistemare tutta la parte legata ai pagamenti 👍
• hostare il db online e modificare url per prod mode in components 🧠
• devo avere un check su cart e su checkout (custom hook?) per verificare disponibilitá dei prodotti 👍
• sistemare Nav (anche responsive!) e fare design profilo + auth 🧠
• bucket per uploadare immagini 👍


08/12/21:
• in Home non voglio fare il setup di shop, ma solo fetch di specific categories 👍
• setup shopData reducer in Shop on render 👍
• sistemare shop ssr, data fetch, se necessario 👍
• usare items da db 👍
• modificare db structure e client data mngmt se necessario 👍

09/12/21:
• sistemare item cards usando db data 👍
• sistemare cart come altro progetto 👍
• in filter by value aggiungere condizioni per tags, categories, brand 👍

10/12/21:
• architettura orders db data 👍
• checkout come altro progetto, usando db e reducer 👍
• eliminare ogni connessione a commerce.js in checkout 👍
• ricollegare paypal a checkout, come altro progetto 👍


13/12/21:
• prodotti in stock deve modificarsi dopo acquisto -> db update ? 👍
• testare paypal in SB 👍
• ricollegare stripe e testare in SB
• creare pagina in cui vedere tutti gli ordini (solo per admin) 👍

15/12/21:
• design basic per intrefaccia dashboard e pannelli 👍
• assicurarsi che dashboard non sia accessibile a non admin 👍
• trovare modo per far diventare utente admin 👍
// Ho il valore della mia password hashed che posso usare in setup.sql per creare primi users admin

16/12/21:
• fare component per admin/ordine/[id] 👍
• fare component per admin/utente/[id] 👍
• fare component e form per admin/prodotto/[slug] 👍
• fare i vari filtri per ogni scheda 👍
• fare component per admin/statistiche

23/12/21:
• fare input x related product in admin/prodotto/[slug] 👍
• fare error handling per inputs in admin/prodotto/[slug] 👍
• testare bugs admin/prodotto/[slug] 👍

24/12/21:
• scheda per creare nuovo prodotto 👍
• funzione per eliminare prodotti 👍
• check di stock quando si apre cart e prima di creare ordine in db 👍
• test di check stock (typos, dataflow) 👍
• test funzionale (mettere item in carrello -> azzerare e/o diminuire stock in db -> provare a pagare) 👍

26/12/21:
• aggiornare isAuth utils con isAdmin 👍
• prevent hickJacking in inputs
• testare pagamenti non in sb mode

27/12/21:
• Component profilo utente
• Responsiveness e design fixes parte user
• Responsiveness e design parte admin (dashboard)

28/12/21
• rimuovere tutti console.log()
• host db online e cambia link in components e funzioni che lo utilizzano
• deploy su AWS
• testare che tutte le key siano nascoste e che sito sia sicuro 
// users non hanno modo di accedere a admin routes (server e client), keys, etc...
