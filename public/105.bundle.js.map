{"version":3,"file":"105.bundle.js","mappings":"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","sources":["webpack://damamyamamy/./src/client/components/Button/Button.js","webpack://damamyamamy/./src/client/components/Checkout/steps/AddressForm.js","webpack://damamyamamy/./src/client/components/Checkout/steps/Review.js","webpack://damamyamamy/./src/client/components/Checkout/steps/PaymentForm.js","webpack://damamyamamy/./src/client/redux/Checkout/checkout.actions.js","webpack://damamyamamy/./src/client/components/Checkout/Checkout.js","webpack://damamyamamy/./src/client/utils/validateForms.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style/Button.css\";\n\nconst STATUS = {\n    HOVERED: \"hovered\",\n    NORMAL: \"normal\",\n};\n\nexport default function Button({ page, text, type, fn, style }) {\n    const [status, setStatus] = useState(STATUS.NORMAL);\n\n    const onMouseEnter = () => {\n        setStatus(STATUS.HOVERED);\n    };\n\n    const onMouseLeave = () => {\n        setStatus(STATUS.NORMAL);\n    };\n\n    const handleFunction = () => {\n        if (typeof fn === \"function\") {\n            fn();\n        } else {\n            return;\n        }\n    };\n\n    if (type === \"function\")\n        return (\n            <button\n                type=\"button\"\n                onClick={() => handleFunction()} //activate fn here! 🧨\n                className={`btn ${status} ${style}`}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                {text}\n            </button>\n        );\n\n    if (type === \"internal\")\n        return (\n            <Link to={page || \"#\"} onClick={() => handleFunction()}>\n                <button\n                    type=\"button\"\n                    className={`btn ${status} ${style}`}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                >\n                    {text}\n                </button>\n            </Link>\n        );\n\n    if (type === \"external\")\n        return (\n            <a\n                target=\"_blank\"\n                href={page || \"#\"}\n                rel=\"noopener noreferrer\"\n                onClick={() => handleFunction()}\n            >\n                <button\n                    type=\"button\"\n                    className={`btn ${status} ${style}`}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                >\n                    {text}\n                </button>\n            </a>\n        );\n\n    if (type === \"submit\")\n        return (\n            <button\n                type=\"submit\"\n                className={`btn ${status} ${style}`}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onClick={() => handleFunction()}\n            >\n                {text}\n            </button>\n        );\n}\n","import { useState, useEffect } from \"react\";\nimport { commerce } from \"../../../lib/commerce\";\nimport {\n    nameValidation,\n    emailValidation,\n    numberValidation,\n    requestedValue,\n} from \"../../../utils/validateForms\";\nimport Button from \"../../Button/Button\";\n\nexport default function AddressForm({ checkoutToken, next }) {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState(\"\");\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState(\"\");\n    // const methods = useForm();\n    const [values, setValues] = useState({});\n    const [errors, setErrors] = useState({});\n\n    console.log(\"errors: \", errors);\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n        id: code,\n        label: name,\n    }));\n    // console.log(\"countries: \", countries);\n    const subdivisions = Object.entries(shippingSubdivisions).map(\n        ([code, name]) => ({\n            id: code,\n            label: name,\n        })\n    );\n    // console.log(\"subdivisions: \", subdivisions);\n    const options = shippingOptions.map((sO) => ({\n        id: sO.id,\n        label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\n    }));\n    console.log(\"options: \", options);\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } =\n            await commerce.services.localeListShippingCountries(\n                checkoutTokenId\n            );\n\n        // console.log(\"fetched countries: \", countries);\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]); //questo mi serve perché ricevo un oggetto invece di array (da commerce), e voglio solo i keys \"countries\" al suo interno // [0] é per avere il primo di questi\n    };\n\n    const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(\n            countryCode\n        );\n\n        // console.log(\"fetched subdivisions: \", subdivisions);\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    };\n\n    const fetchShippingOptions = async (\n        checkoutTokenId,\n        country,\n        region = null\n    ) => {\n        const options = await commerce.checkout.getShippingOptions(\n            checkoutTokenId,\n            { country, region }\n        );\n\n        // console.log(\"fetched options: \", options);\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    }; //region = null se non cé né una // io ho una sola option al momento ma puo essere utile se si vogliono aggiungere in futuro -> good practice\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id);\n    }, []); //useEffect é come componentDidMount, viene eseguito solo al caricamento del component // perché [] alla fine\n\n    useEffect(() => {\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\n    }, [shippingCountry]); //useEffect viene eseguito solo se cambia shippingCountry // perché [shippingCountry] alla fine // if exists\n\n    useEffect(() => {\n        if (shippingSubdivision)\n            fetchShippingOptions(\n                checkoutToken.id,\n                shippingCountry,\n                shippingSubdivision\n            );\n    }, [shippingSubdivision]);\n\n    const handleForm = (e) => {\n        e.preventDefault();\n        const form = e.target.form;\n        const data = new FormData(form);\n        const allValues = Object.fromEntries(data.entries());\n        // console.log(\"form data: \", allValues);\n\n        setValues(allValues);\n\n        // for (let name of data.keys()) {\n        //     console.log(\"form name: \", name);\n        // }\n        // for (let value of data.values()) {\n        //     console.log(\"form value: \", value);\n        // }\n    };\n\n    useEffect(() => {\n        if (values) {\n            console.log(\"values in useEffect: \", values);\n        }\n    }, [values]);\n\n    const handleBlur = (e) => {\n        const { name, value } = e.target;\n        //creo nuovo oggetto per rimuovere errore precedente\n        let newErrObj = { ...errors };\n\n        //validate\n        if (name === \"firstName\") {\n            const resp = nameValidation(\"nome\", value);\n            if (resp) {\n                setErrors({ ...errors, [name]: resp });\n            } else {\n                delete newErrObj[name];\n                setErrors(newErrObj);\n            }\n        }\n        if (name === \"lastName\") {\n            const resp = nameValidation(\"cognome\", value);\n            if (resp) {\n                setErrors({ ...errors, [name]: resp });\n            } else {\n                delete newErrObj[name];\n                setErrors(newErrObj);\n            }\n        }\n        if (name === \"email\") {\n            const resp = emailValidation(value);\n            if (resp) {\n                setErrors({ ...errors, [name]: resp });\n            } else {\n                delete newErrObj[name];\n                setErrors(newErrObj);\n            }\n        }\n        if (name === \"address1\" || name === \"city\") {\n            const resp = requestedValue(value);\n            if (resp) {\n                setErrors({ ...errors, [name]: resp });\n            } else {\n                delete newErrObj[name];\n                setErrors(newErrObj);\n            }\n        }\n        if (name === \"zip\") {\n            const resp = numberValidation(\"CAP\", value);\n            if (resp) {\n                setErrors({ ...errors, [name]: resp });\n            } else {\n                delete newErrObj[name];\n                setErrors(newErrObj);\n            }\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (Object.keys(errors).length === 0) {\n            next(values);\n        } else {\n            console.log(\"INVALID INPUTS\");\n            return;\n        }\n    };\n\n    if (shippingOptions.length < 1)\n        return (\n            <>\n                <div className=\"loader loader-inverted\"></div>\n                <p>in attesa di commerce.js</p>\n            </>\n        );\n\n    return (\n        <div className=\"checkout-form-box\">\n            <h3 className=\"\">I vostri dati</h3>\n\n            <form\n                onChange={(e) => handleForm(e)}\n                onSubmit={(e) => handleSubmit(e)}\n            >\n                <div className=\"form-col-left\">\n                    <label>Nome *</label>\n                </div>\n                <div className=\"form-col-right\">\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        onBlur={(e) => handleBlur(e)}\n                    />\n                    {errors.firstName && (\n                        <div className=\"form-error\">{errors.firstName}</div>\n                    )}\n                </div>\n\n                <div className=\"form-col-left\">\n                    <label>Cognome *</label>\n                </div>\n                <div className=\"form-col-right\">\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        onBlur={(e) => handleBlur(e)}\n                    />\n                    {errors.lastName && (\n                        <div className=\"form-error\">{errors.lastName}</div>\n                    )}\n                </div>\n\n                <div className=\"form-col-left\">\n                    <label>Indirizzo *</label>\n                </div>\n                <div className=\"form-col-right\">\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"address1\"\n                        id=\"address1\"\n                        onBlur={(e) => handleBlur(e)}\n                    />\n                    {errors.address1 && (\n                        <div className=\"form-error\">{errors.address1}</div>\n                    )}\n                </div>\n\n                <div className=\"form-col-left\">\n                    <label>Email *</label>\n                </div>\n                <div className=\"form-col-right\">\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"email\"\n                        id=\"email\"\n                        onBlur={(e) => handleBlur(e)}\n                    />\n                    {errors.email && (\n                        <div className=\"form-error\">{errors.email}</div>\n                    )}\n                </div>\n\n                <div className=\"form-col-left\">\n                    <label>Città *</label>\n                </div>\n                <div className=\"form-col-right\">\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"city\"\n                        id=\"city\"\n                        onBlur={(e) => handleBlur(e)}\n                    />\n                    {errors.city && (\n                        <div className=\"form-error\">{errors.city}</div>\n                    )}\n                </div>\n\n                <div className=\"form-col-left\">\n                    <label>CAP *</label>\n                </div>\n                <div className=\"form-col-right\">\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"zip\"\n                        id=\"zip\"\n                        onBlur={(e) => handleBlur(e)}\n                    />\n                    {errors.zip && (\n                        <div className=\"form-error\">{errors.zip}</div>\n                    )}\n                </div>\n\n                <div className=\"form-col-left\">\n                    <label>Stato</label>\n                </div>\n                <div className=\"form-col-right\">\n                    <select\n                        required\n                        name=\"country\"\n                        id=\"country\"\n                        value={shippingCountry}\n                        onChange={(e) => setShippingCountry(e.target.value)}\n                    >\n                        {countries.map((country) => (\n                            <option key={country.id} value={country.id}>\n                                {country.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <div className=\"form-col-left\">\n                    <label>Provincia</label>\n                </div>\n                <div className=\"form-col-right\">\n                    <select\n                        required\n                        name=\"region\"\n                        id=\"region\"\n                        value={shippingSubdivision}\n                        onChange={(e) => setShippingSubdivision(e.target.value)}\n                    >\n                        {subdivisions.map((subdivision) => (\n                            <option key={subdivision.id} value={subdivision.id}>\n                                {subdivision.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <div className=\"form-col-left\">\n                    <label>Metodo di spedizione</label>\n                </div>\n                <div className=\"form-col-right\">\n                    <select\n                        required\n                        name=\"shipping\"\n                        id=\"shipping\"\n                        value={shippingOption}\n                        onChange={(e) => setShippingOption(e.target.value)}\n                    >\n                        {options.map((option) => (\n                            <option key={option.id} value={option.id}>\n                                {option.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <div className=\"row\">\n                    <Button\n                        page=\"/cart\"\n                        text=\"Torna al carrello\"\n                        type=\"internal\"\n                        style=\"inverted-btn\"\n                    />\n\n                    <Button\n                        text=\"Prosegui\"\n                        type=\"submit\"\n                        style=\"inverted-btn\"\n                    />\n                </div>\n            </form>\n        </div>\n    );\n}\n\n/*\n\nguardare quali props di input sono reali invece di CustomTextField (ex. \"required\"?)\n\n*/\n","export default function Review({ checkoutToken }) {\n    return (\n        <>\n            <h5>Il vostro ordine:</h5>\n            <div>\n                {checkoutToken.live.line_items.map((product) => (\n                    <div key={product.name} className=\"review-row\">\n                        <div className=\"review-product-infos\">\n                            <p>{product.name}</p>\n                            <p>Quantità: {product.quantity}</p>\n                        </div>\n\n                        <p className=\"review-product-price\">\n                            {product.line_total.formatted_with_symbol}\n                        </p>\n                    </div>\n                ))}\n            </div>\n            <div>\n                <p className=\"review-final-price\">\n                    Totale: {checkoutToken.live.subtotal.formatted_with_symbol}\n                </p>\n            </div>\n        </>\n    );\n}\n","import { useEffect, useState, useRef } from \"react\";\n\nimport {\n    Elements,\n    CardElement,\n    ElementsConsumer,\n} from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\n// import { envs } from \"../../../../config\";\n\n// import ReactDOM from \"react-dom\";\n\nimport Review from \"./Review\";\nimport Button from \"../../Button/Button\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\n// const PayPalButton = window.paypal.Buttons.driver(\"react\", { React, ReactDOM });\n\nexport default function PaymentForm({\n    checkoutToken,\n    shippingData,\n    nextStep,\n    backStep,\n    onCaptureCheckout,\n    timeout,\n}) {\n    console.log(\"shippingData: \", shippingData);\n    console.log(\"paypal: \", window.paypal);\n    const [method, setMethod] = useState(\"cc\");\n    const [termsAccepted, setTermsAccepted] = useState(false);\n    const [paypalError, setPaypalError] = useState(null);\n    const paypalRef = useRef(null);\n\n    useEffect(() => {\n        // check if PayPal JS SDK is already loaded\n        if (window.paypal) {\n            renderButtons();\n        } else {\n            const ppValues = {\n                currency: \"EUR\",\n                disablefunding: \"card,giropay,sepa,sofort\",\n                locale: \"it_IT\",\n            };\n            insertScriptElement({\n                url: `https://www.paypal.com/sdk/js?client-id=${process.env.REACT_APP_PAYPAL_CLIENT_ID}&currency=${ppValues.currency}&disable-funding=${ppValues.disablefunding}&locale=${ppValues.locale}`,\n                callback: () => {\n                    renderButtons();\n                },\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        renderButtons();\n    }, [method]);\n\n    const renderButtons = () => {\n        //codice necessario perché il div di useRef viene renderizzato if (method == pp)\n        if (method === \"cc\") {\n            return;\n        }\n\n        if (method === \"pp\") {\n            window.paypal\n                .Buttons({\n                    style: {\n                        color: \"blue\",\n                        shape: \"pill\",\n                        label: \"paypal\",\n                        tagline: false,\n                    },\n                    createOrder: (data, actions) => {\n                        return actions.order.create({\n                            purchase_units: [\n                                {\n                                    description: \"Your Order!\",\n                                    amount: {\n                                        currency_code: \"EUR\",\n                                        value: checkoutToken.live.subtotal.raw,\n                                    },\n                                },\n                            ], //questa array verra mappata, devo mettere ogni elemento al suo interno 🐔\n                        });\n                    },\n                    onApprove: async (data, actions) => {\n                        const order = await actions.order.capture();\n                        // devo vedere questo order e in caso modificarlo come orderData\n                        const orderData = {\n                            line_items: checkoutToken.live.line_items,\n                            customer: {\n                                firstname: shippingData.firstName,\n                                lastname: shippingData.lastName,\n                                email: shippingData.email,\n                            },\n                            shipping: {\n                                name: \"Domestico\",\n                                street: shippingData.address1,\n                                town_city: shippingData.city,\n                                county_state: shippingData.region,\n                                postal_zip_code: shippingData.zip,\n                                country: shippingData.country,\n                            },\n                            fulfillment: {\n                                shipping_method: shippingData.shipping,\n                            },\n                            payment: {\n                                gateway: \"paypal\",\n                                paypal: {\n                                    action: \"capture\",\n                                    payment_id: order.id,\n                                    payer_id: order.payer.payer_id,\n                                },\n                            },\n                        }; //devo vedere se action:capture é corretto\n\n                        console.log(\"order\", order);\n                        console.log(\"orderData\", orderData);\n                        console.log(\"checkoutToken\", checkoutToken);\n                        onCaptureCheckout(checkoutToken.id, orderData);\n                        nextStep();\n                    },\n                    onError: (err) => {\n                        setPaypalError(err);\n                        console.error(err);\n                    },\n                })\n                .render(paypalRef.current);\n        }\n    };\n\n    const handleSelection = (e) => {\n        console.log(\"e: \", e);\n        console.log(\"e.target.value: \", e.target.value);\n        setMethod(e.target.value);\n    };\n\n    const acceptTerms = (e) => {\n        // e.preventDefault();\n        e.persist();\n        const checked = e.target.checked;\n\n        checked ? setTermsAccepted(true) : setTermsAccepted(false);\n    };\n\n    const TermsBox = () => (\n        <div className=\"check-terms\">\n            <input\n                type=\"checkbox\"\n                name=\"accept\"\n                onChange={(e) => acceptTerms(e)}\n                checked={termsAccepted}\n            />\n            <label htmlFor=\"accept\">\n                Dichiaro di aver letto{\" \"}\n                <a\n                    href=\"/terms-conditions\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Termini e Condizioni\n                </a>\n            </label>\n        </div>\n    );\n\n    const handleSubmit = async (e, elements, stripe) => {\n        e.preventDefault();\n\n        if (!stripe || !elements) return;\n\n        if (!termsAccepted) {\n            alert(\"Accettare termini e condizioni prima di proseguire\");\n            return;\n        } //forse va nello step precedente? 🐔\n\n        const cardElement = elements.getElement(CardElement);\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: cardElement,\n        });\n\n        if (error) {\n            console.log(\"[error]\", error);\n            // devo provare a fare un mockup dell'errore 🐔\n        } else {\n            const orderData = {\n                line_items: checkoutToken.live.line_items,\n                customer: {\n                    firstname: shippingData.firstName,\n                    lastname: shippingData.lastName,\n                    email: shippingData.email,\n                },\n                shipping: {\n                    name: \"Domestico\",\n                    street: shippingData.address1,\n                    town_city: shippingData.city,\n                    county_state: shippingData.region,\n                    postal_zip_code: shippingData.zip,\n                    country: shippingData.country,\n                },\n                fulfillment: { shipping_method: shippingData.shipping },\n                payment: {\n                    gateway: \"stripe\",\n                    stripe: {\n                        payment_method_id: paymentMethod.id,\n                    },\n                },\n            };\n\n            // console.log(\"paymentMethod: \", paymentMethod);\n            // console.log(\"orderData: \", orderData);\n            onCaptureCheckout(checkoutToken.id, orderData);\n\n            nextStep();\n        }\n    };\n\n    const handleFakeSubmit = async () => {\n        onCaptureCheckout(\"test\", {}); //this is for App, to empty the cart\n        timeout(); //this come as a prop from Checkout\n        nextStep();\n    }; //this is only for test\n\n    // useEffect(() => {\n    //     // Load PayPal Script at the end of our DOM\n    //     const script = document.createElement(\"script\");\n    //     script.src =\n    //         \"https://www.paypal.com/sdk/js?client-id=AZVz756sSn0AylZvDKjKGJnhJMGIw3JLV5crP_6igMFZhIOH00ReyNl4bo8GSKT7P0NkK5GEZUgULuin\";\n    //     script.addEventListener(\"load\", () => setLoaded(true));\n    //     document.main.appendChild(script);\n\n    //     if (loaded) {\n    //     }\n    // });\n\n    return (\n        <div className=\"checkout-form-box\">\n            <h3 className=\"\">Pagamento</h3>\n            <Review checkoutToken={checkoutToken} />\n            <h5>Metodi di pagamento:</h5>\n            <select className=\"payment-mode\" onChange={handleSelection}>\n                <option value=\"cc\">Carta di credito</option>\n                <option value=\"pp\">Paypal</option>\n                <option value=\"test\">Test</option>\n            </select>\n\n            {method === \"cc\" && (\n                <Elements stripe={stripePromise}>\n                    <ElementsConsumer>\n                        {({ elements, stripe }) => (\n                            <form\n                                onSubmit={(e) =>\n                                    handleSubmit(e, elements, stripe)\n                                }\n                            >\n                                <CardElement />\n\n                                <TermsBox />\n\n                                <div className=\"row2\">\n                                    <Button\n                                        fn={backStep}\n                                        text=\"Torna indietro\"\n                                        type=\"function\"\n                                        style=\"inverted-btn\"\n                                    />\n                                    <button\n                                        className={\"btn inverted-btn\"}\n                                        type=\"submit\"\n                                        disabled={!stripe}\n                                    >\n                                        Conferma\n                                        {\" \" +\n                                            checkoutToken.live.subtotal\n                                                .formatted_with_symbol}\n                                    </button>\n                                </div>\n                            </form>\n                        )}\n                    </ElementsConsumer>\n                </Elements>\n            )}\n            {method === \"pp\" && (\n                <div className=\"paypal-comp\">\n                    {paypalError && (\n                        <div>\n                            Uh oh, an error occurred! {paypalError.message}\n                        </div>\n                    )}\n                    <TermsBox />\n                    <div className=\"checkout-paypal-btn\" ref={paypalRef} />\n                    <Button\n                        fn={backStep}\n                        text=\"Torna indietro\"\n                        type=\"function\"\n                        style=\"inverted-btn\"\n                    />\n                </div>\n            )}\n            {method === \"test\" && (\n                <div className=\"row\">\n                    <Button\n                        fn={backStep}\n                        text=\"Torna indietro\"\n                        type=\"function\"\n                        style=\"inverted-btn\"\n                    />\n                    <Button\n                        fn={handleFakeSubmit}\n                        text={`Conferma ${checkoutToken.live.subtotal.formatted_with_symbol}`}\n                        type=\"function\"\n                        style=\"inverted-btn\"\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nfunction insertScriptElement({\n    url,\n    attributes = {},\n    properties = {},\n    callback,\n}) {\n    const newScript = document.createElement(\"script\");\n    newScript.onerror = (err) =>\n        console.error(\"An error occured while loading the PayPal JS SDK\", err);\n    if (callback) newScript.onload = callback;\n\n    Object.keys(attributes).forEach((key) => {\n        newScript.setAttribute(key, attributes[key]);\n    });\n\n    document.body.appendChild(newScript);\n    newScript.src = url;\n}\n\n/*\n\nCODICI PER TEST VERSION 🤖\n\n- aggiungere nuova opzione \"test\" per method\n- attivare timeout() (anche in Chekout.js)\n- attivare isfinished in Chekout.js\n- attivare handleFakeSubmit per fingere il pagamento\n- aggiungere allerts su checkout, per chiarire che non funziona veramente in test mode\n- aggiungere \"test\" condition in App in handleCaptureCheckout\n- modificare le varie keys da live a sandbox/test (script url for paypal + dati per checkout stripe gateway)\n\nPER TESTARE PAGAMENTO \ngateway: 'test_gateway',\n    card: {\n      number: '4242 4242 4242 4242',\n      expiry_month: '01',\n      expiry_year: '2023',\n      cvc: '123',\n      postal_zip_code: '94103',\n    },\n\n    \n    \n*/\n","import {\n    LOAD_CHECKOUT,\n    CAPTURE_CHECKOUT,\n    HANDLE_ERROR,\n} from \"./checkout.types\";\n\nimport { commerce } from \"../../lib/commerce\";\n\nexport function loadCheckout() {\n    return {\n        type: LOAD_CHECKOUT,\n    };\n}\nexport function captureCheckout(payload) {\n    return (dispatch) =>\n        getSomeAsyncData(\n            dispatch,\n            commerce.checkout.capture(\n                payload.checkoutTokenId,\n                payload.newOrder\n            ),\n            CAPTURE_CHECKOUT\n        );\n}\n\nasync function getSomeAsyncData(dispatch, url, type) {\n    console.log(`👮‍♀️👮‍♂️👮‍♀️: `, type);\n    try {\n        const data = await url;\n        console.log(`😎😋😋data in ${type}: `, data);\n        dispatch({\n            type: type,\n            payload: data,\n        });\n    } catch (err) {\n        console.log(`err in ${type} action: `, err);\n        dispatch({\n            type: HANDLE_ERROR,\n            payload: { actionType: type, error: err },\n        });\n    }\n}\n","import { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AddressForm from \"./steps/AddressForm\";\nimport PaymentForm from \"./steps/PaymentForm\";\nimport Button from \"../Button/Button\";\nimport { commerce } from \"../../lib/commerce\";\nimport \"./style/Checkout.css\";\n\n// REDUX\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { emptyCart, refreshCart } from \"../../redux/LoadCart/loadCart.actions\";\nimport {\n    loadCheckout,\n    captureCheckout,\n} from \"../../redux/Checkout/checkout.actions\";\nconst selectCart = (state) => state.loadCart.cart;\nconst selectOrder = (state) => state.checkout.order;\nconst selectError = (state) => state.checkout.error;\n\nconst steps = [\"Shipping address\", \"Payment details\"];\n\nexport default function Checkout() {\n    //STATE\n    let cart = useSelector(selectCart, shallowEqual);\n    let order = useSelector(selectOrder, shallowEqual);\n    let error = useSelector(selectError, shallowEqual);\n    console.log(\"cart in Checkout.js: \", cart);\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [checkoutToken, setCheckoutToken] = useState(null);\n    const [shippingData, setShippingData] = useState({});\n    const history = useHistory();\n    const [isFinished, setIsFinished] = useState(false); //this is only for test\n\n    useEffect(() => dispatch(loadCheckout()), []);\n\n    //STEPS FUNCTIONS\n    const nextStep = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n    const backStep = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    }; // !!in react, if u want to use the previous state, u need to call it as a callback fn\n    const next = (data) => {\n        setShippingData(data);\n        nextStep();\n        // console.log(\"shippingData: \", shippingData);\n    };\n\n    const dispatch = useDispatch();\n    const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n        console.log(\"handleCaptureCheckout activated! 🥶🧨🎅\");\n        if (checkoutTokenId === \"test\") {\n            //this is only for test\n            dispatch(emptyCart());\n        } else {\n            dispatch(\n                captureCheckout({\n                    checkoutTokenId: checkoutTokenId,\n                    newOrder: newOrder,\n                })\n            );\n        }\n    };\n    //quando abbiamo un ordine allora facciamo il refresh\n    useEffect(() => order && dispatch(refreshCart()), [order]);\n\n    useEffect(() => {\n        const generateToken = async () => {\n            try {\n                const token = await commerce.checkout.generateTokenFrom(\n                    \"cart\",\n                    cart.id\n                );\n                console.log(\"token: \", token);\n                setCheckoutToken(token);\n            } catch (err) {\n                if (activeStep !== steps.length) history.push(\"/\");\n                // this fix the bug: if refresh page in checkout the cart will be empty\n                // console.log(\"error: \", err);\n            }\n        };\n        activeStep === 0 && generateToken();\n    }, [cart]);\n\n    // timeout -> mock up the transaction without using card details on stripe\n    const timeout = () => {\n        console.log(\"timeout activated!\");\n        setTimeout(() => {\n            setIsFinished(true);\n        }, 3000);\n    };\n\n    const ProgressBar = () => (\n        <ul className=\"progressbar\">\n            <li className=\"active\">Indirizzo</li>\n            <li className={`${activeStep > 0 ? \"active\" : \"\"}`}>\n                Metodo di pagamento\n            </li>\n        </ul>\n    );\n\n    const Form = () =>\n        activeStep === 0 ? (\n            <AddressForm checkoutToken={checkoutToken} next={next} />\n        ) : (\n            <PaymentForm\n                checkoutToken={checkoutToken}\n                shippingData={shippingData}\n                // activeStep={activeStep}\n                nextStep={nextStep}\n                backStep={backStep}\n                onCaptureCheckout={handleCaptureCheckout}\n                timeout={timeout}\n            />\n        );\n\n    let Confirmation = () =>\n        order ? (\n            <div className=\"confirmation-wrap\">\n                <div>\n                    <h3>\n                        Grazie per il tuo acquisto {order.customer.firstname}{\" \"}\n                        {order.customer.lastname}!\n                    </h3>\n\n                    <p>Ordine: {order.customer_reference}</p>\n                </div>\n\n                <Button\n                    page=\"/cart\"\n                    text=\"Torna al carrello\"\n                    type=\"internal\"\n                    style=\"inverted-btn\"\n                />\n            </div>\n        ) : isFinished ? (\n            <div className=\"confirmation-wrap\">\n                <div>\n                    <h3>\n                        Grazie per il tuo acquisto! {shippingData.firstName}{\" \"}\n                        {shippingData.lastName}!\n                    </h3>\n                </div>\n                <br />\n                <Button\n                    page=\"/\"\n                    text=\"Torna al sito\"\n                    type=\"internal\"\n                    style=\"inverted-btn\"\n                />\n            </div>\n        ) : (\n            <div className=\"loader-inverted\"></div>\n        );\n    //  (after testing) remove the \"isFinished\" condition and leave only the spinner\n\n    if (error) {\n        Confirmation = () => (\n            <div className=\"confirmation-wrap\">\n                <div>\n                    <h3>Errore:</h3>\n                    <p>{error.err.data.error.message}</p>\n                </div>\n\n                <Button page=\"/cart\" text=\"Torna al carrello\" type=\"internal\" />\n            </div>\n        );\n    }\n\n    return (\n        <div id=\"Checkout\">\n            <div className={\"checkout-wrap\"}>\n                <div className={\"checkout-title\"}>\n                    <h1>Checkout</h1>\n                </div>\n\n                <div className={\"progressbar-wrap\"}>\n                    <ProgressBar />\n                </div>\n\n                {activeStep === steps.length ? (\n                    <Confirmation />\n                ) : checkoutToken ? (\n                    <Form />\n                ) : (\n                    <div className=\"loader-inverted\"></div>\n                )}\n            </div>\n        </div>\n    );\n}\n","const nameValidation = (fieldName, fieldValue) => {\n    if (fieldValue.trim() === \"\") {\n        return `Il ${fieldName} è richiesto`;\n    }\n    if (/[^a-zA-Z -]/.test(fieldValue)) {\n        return \"Caratteri non consentiti\";\n    }\n    if (fieldValue.trim().length < 3) {\n        return `Il ${fieldName} deve contenere almeno 3 lettere`;\n    }\n    return null;\n};\n\nconst emailValidation = (email) => {\n    if (\n        /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n            email\n        )\n    ) {\n        return null;\n    }\n    if (email.trim() === \"\") {\n        return \"È richiesta un'email\";\n    }\n    return \"Perfavore inserisci un'email valida\";\n};\n\nconst requestedValue = (fieldValue) => {\n    if (fieldValue.trim() === \"\") {\n        return `Devi inserire qualcosa`;\n    }\n    return null;\n};\nconst textValidation = (fieldValue) => {\n    if (fieldValue.trim() === \"\") {\n        return `Devi scriverci qualcosa`;\n    }\n    return null;\n};\n\nconst numberValidation = (fieldName, fieldValue) => {\n    if (fieldValue.trim() === \"\") {\n        return `Il ${fieldName} è richiesto`;\n    }\n    if (/^\\d+$/.test(fieldValue)) {\n        return null;\n    }\n    return `${fieldName} deve essere un numero`;\n};\n\n// const ageValidation = (age) => {\n//     if (!age) {\n//         return \"Age is required\";\n//     }\n//     if (age < 18) {\n//         return \"Age must be at least 18\";\n//     }\n//     if (age > 99) {\n//         return \"Age must be under 99\";\n//     }\n//     return null;\n// };\n\n// const validate = {\n//     firstName: (name) => nameValidation(\"First Name\", name),\n//     lastName: (name) => nameValidation(\"Last Name\", name),\n//     email: emailValidation,\n//     age: ageValidation,\n// };\n\nmodule.exports = {\n    nameValidation,\n    emailValidation,\n    requestedValue,\n    textValidation,\n    numberValidation,\n};\n\n/*\n\n1- prendere tutti i valori di form\n2- prima di avviare submit il check deve gia essere fatto\n3- in caso di errore gli allert vengono mostrati e nessuna richiesta o reload vengono eseguiti, il form resta invariato\n\n2.1- l'oggetto viene inviato in una funzione che gestisce i vari elementi\n2.2- ogni valore viene mandato alla validation adeguata (es. nome, number, email) \n2.3- ognuna di queste validation torna il valore, se corretto, oppure un errore + message\n2.4- la funzione principale riceve i vari risultati e ricostruisce l'oggetto con i valori (forse non serve visto che vanno giá bene i valori del form stesso)\n2.5- costruisce un secondo oggetto con gli errori, se presenti\n2.6- in questo caso ritorna al component del form due cose: error = true & errorsObj\n2.7- il form se non riceve error = true fa andare next(values), altrimenti no: mostra gli errori ai rispettivi input fields\n\n2.1b.1- potrei evitare la funzione che gestisce l'oggetto, spedendo ogni input alla funzione corrispondente dal component, ricevendo per ognuna l'ok o l'errore\n2.1b.2- poi nel component faccio un check degli errori prima di mavviare il submit\n\n*/\n"],"names":["useState","Link","STATUS","HOVERED","NORMAL","Button","page","text","type","fn","style","status","setStatus","onMouseEnter","onMouseLeave","handleFunction","useEffect","commerce","nameValidation","emailValidation","numberValidation","requestedValue","AddressForm","checkoutToken","next","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","values","setValues","errors","setErrors","console","log","countries","Object","entries","map","code","name","id","label","subdivisions","options","sO","description","price","formatted_with_symbol","fetchShippingCountries","checkoutTokenId","services","localeListShippingCountries","keys","fetchSubdivisions","countryCode","localeListSubdivisions","fetchShippingOptions","country","region","checkout","getShippingOptions","handleForm","e","preventDefault","form","target","data","FormData","allValues","fromEntries","handleBlur","value","newErrObj","resp","handleSubmit","length","firstName","lastName","address1","email","city","zip","subdivision","option","Review","live","line_items","product","quantity","line_total","subtotal","useRef","Elements","CardElement","ElementsConsumer","loadStripe","stripePromise","process","env","REACT_APP_STRIPE_PUBLIC_KEY","PaymentForm","shippingData","nextStep","backStep","onCaptureCheckout","timeout","window","paypal","method","setMethod","termsAccepted","setTermsAccepted","paypalError","setPaypalError","paypalRef","renderButtons","ppValues","currency","disablefunding","locale","insertScriptElement","url","REACT_APP_PAYPAL_CLIENT_ID","callback","Buttons","color","shape","tagline","createOrder","actions","order","create","purchase_units","amount","currency_code","raw","onApprove","capture","orderData","customer","firstname","lastname","shipping","street","town_city","county_state","postal_zip_code","fulfillment","shipping_method","payment","gateway","action","payment_id","payer_id","payer","onError","err","error","render","current","handleSelection","acceptTerms","persist","checked","TermsBox","elements","stripe","alert","cardElement","getElement","createPaymentMethod","card","paymentMethod","payment_method_id","handleFakeSubmit","message","attributes","properties","newScript","document","createElement","onerror","onload","forEach","key","setAttribute","body","appendChild","src","LOAD_CHECKOUT","CAPTURE_CHECKOUT","HANDLE_ERROR","loadCheckout","captureCheckout","payload","dispatch","getSomeAsyncData","newOrder","actionType","useHistory","useDispatch","useSelector","shallowEqual","emptyCart","refreshCart","selectCart","state","loadCart","cart","selectOrder","selectError","steps","Checkout","activeStep","setActiveStep","setCheckoutToken","setShippingData","history","isFinished","setIsFinished","prevActiveStep","handleCaptureCheckout","generateToken","generateTokenFrom","token","push","setTimeout","ProgressBar","Form","Confirmation","customer_reference","fieldName","fieldValue","trim","test","textValidation","module","exports"],"sourceRoot":""}