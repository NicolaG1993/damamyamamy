{"version":3,"file":"57.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA,IAAME,SAAS,GAAG,CACd;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,QAAQ,EAAE,WAFd;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CADc,EAMd;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,QAAQ,EAAE,WAFd;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CANc,EAWd;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,QAAQ,EAAE,WAFd;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CAXc,CAAlB;AAkBe,SAASC,GAAT,GAAe;AAC1B,kBAA4CN,+CAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOO,cAAP;AAAA,MAAuBC,iBAAvB;;AAEAP,EAAAA,gDAAS,CAAC,YAAM;AACZ;AACA,QAAIQ,MAAM,GAAGP,SAAS,CAACQ,GAAV,CAAc,UAACC,EAAD;AAAA,6CAAcA,EAAd;AAAkBC,QAAAA,IAAI,EAAE;AAAxB;AAAA,KAAd,CAAb;AACAJ,IAAAA,iBAAiB,CAACC,MAAD,CAAjB;AACAI,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACZ,EAAD,EAAQ;AACxB;AACA,QAAMM,MAAM,GAAGF,cAAc,CAACG,GAAf,CAAmB,UAACC,EAAD,EAAQ;AACtC;AACA,UAAIA,EAAE,CAACR,EAAH,KAAUA,EAAV,IAAgB,CAACQ,EAAE,CAACC,IAAxB,EAA8B;AAC1B,+CAAYD,EAAZ;AAAgBC,UAAAA,IAAI,EAAE;AAAtB;AACH,OAJqC,CAKtC;;;AACA,6CAAYD,EAAZ;AAAgBC,QAAAA,IAAI,EAAE;AAAtB;AACH,KAPc,CAAf;AAQAJ,IAAAA,iBAAiB,CAACC,MAAD,CAAjB;AACH,GAXD;;AAaA,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACZ,QAAD;AAAA,WAClBA,QAAQ,CAACQ,IAAT,GAAgB,kBAAhB,GAAqC,eADnB;AAAA,GAAtB;;AAEA,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACb,QAAD;AAAA,WACtBA,QAAQ,CAACQ,IAAT,GAAgB,WAAhB,GAA8B,QADR;AAAA,GAA1B;;AAGAM,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BZ,cAA/B,EA5B0B,CA6B1B;;AACA,sBACI;AAAK,MAAE,EAAE,KAAT;AAAA,4BACI;AAAA;AAAA,MADJ,EAGKA,cAAc,IACXA,cAAc,CAACG,GAAf,CAAmB,UAACN,QAAD;AAAA,0BACf;AAAuB,iBAAS,EAAC,eAAjC;AAAA,gCACI;AAAK,iBAAO,EAAE;AAAA,mBAAMW,WAAW,CAACX,QAAQ,CAACD,EAAV,CAAjB;AAAA,WAAd;AAAA,iCACI;AAAA,sBAAKC,QAAQ,CAACA;AAAd;AADJ,UADJ,eAII;AAAK,mBAAS,EAAEY,aAAa,CAACZ,QAAD,CAA7B;AAAA,iCACI;AAAG,qBAAS,EAAEa,iBAAiB,CAACb,QAAD,CAA/B;AAAA,sBACKA,QAAQ,CAACC;AADd;AADJ,UAJJ;AAAA,SAAUD,QAAQ,CAACD,EAAnB,CADe;AAAA,KAAnB,CAJR;AAAA,IADJ;AAmBH","sources":["webpack://damamyamamy/./src/client/components/Documents/FAQ/FAQ.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./style/FAQ.css\";\n\nconst questions = [\n    {\n        id: 0,\n        question: \"Domanda 0\",\n        answer: \"Io sono il testo che deve scendere dall'alto\",\n    },\n    {\n        id: 1,\n        question: \"Domanda 1\",\n        answer: \"Io sono il testo che deve scendere dall'alto\",\n    },\n    {\n        id: 2,\n        question: \"Domanda 2\",\n        answer: \"Io sono il testo che deve scendere dall'alto\",\n    },\n];\n\nexport default function FAQ() {\n    const [questionsState, setQuestionsState] = useState([]);\n\n    useEffect(() => {\n        //al caricamento aggiungere \"open: false\" ad ogni question\n        let newObj = questions.map((el) => ({ ...el, open: false }));\n        setQuestionsState(newObj);\n        window.scrollTo(0, 0);\n    }, []);\n\n    const handleClick = (id) => {\n        // crea nuovo array e loopa ogni el\n        const newObj = questionsState.map((el) => {\n            // se div(id) Ã© chiuso aprilo\n            if (el.id === id && !el.open) {\n                return { ...el, open: true };\n            }\n            // altrimenti chiudi\n            return { ...el, open: false };\n        });\n        setQuestionsState(newObj);\n    };\n\n    const setClassNames = (question) =>\n        question.open ? \"display-dropdown\" : \"hide-dropdown\";\n    const setClassNamesForP = (question) =>\n        question.open ? \"display-p\" : \"hide-p\";\n\n    console.log(\"questionsState \", questionsState);\n    // uso map per fare il render di ogni domanda con meno codice\n    return (\n        <div id={\"FAQ\"}>\n            <h1>FAQ</h1>\n\n            {questionsState &&\n                questionsState.map((question) => (\n                    <div key={question.id} className=\"dropdown-wrap\">\n                        <div onClick={() => handleClick(question.id)}>\n                            <h3>{question.question}</h3>\n                        </div>\n                        <div className={setClassNames(question)}>\n                            <p className={setClassNamesForP(question)}>\n                                {question.answer}\n                            </p>\n                        </div>\n                    </div>\n                ))}\n        </div>\n    );\n}\n"],"names":["useState","useEffect","questions","id","question","answer","FAQ","questionsState","setQuestionsState","newObj","map","el","open","window","scrollTo","handleClick","setClassNames","setClassNamesForP","console","log"],"sourceRoot":""}