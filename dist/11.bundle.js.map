{"version":3,"file":"11.bundle.js","mappings":";;;;;;;;;;;;;AAAA;AACA;;AAEe,SAASG,OAAT,GAAmB;AAC9B,MAAMC,QAAQ,GAAGJ,kEAAW,EAA5B;AACA,MAAIK,KAAK,GAAGJ,kEAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAX;AAAA,GAAD,CAAvB;AAEA,MAAIC,MAAM,GAAGD,KAAK,CAACH,YAAN,CAAmBK,OAAnB,CAA2B,CAA3B,EAA8BC,MAA9B,IAAwC,KAArD;;AAEA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBL,IAAAA,QAAQ,CAACF,+FAAY,CAAC;AAAEQ,MAAAA,EAAE,EAAE,SAAN;AAAiBC,MAAAA,EAAE,EAAE;AAArB,KAAD,CAAb,CAAR;AACH,GAFD;;AAIA,sBACI;AACI,aAAS,oBAAaL,MAAM,GAAG,WAAH,GAAiB,YAApC,CADb;AAEI,WAAO,EAAEG,KAFb;AAAA;AAAA,IADJ;AAQH;;;;;;;;;;;ACrBD;AAEO,SAASP,YAAT,CAAsBa,OAAtB,EAA+B;AAClC,MAAIJ,EAAE,GAAGI,OAAO,CAACJ,EAAjB;;AAEA,MAAIA,EAAE,KAAK,QAAX,EAAqB;AACjB,WAAO;AACHK,MAAAA,IAAI,EAAEJ,iEADH;AAEHG,MAAAA,OAAO,EAAPA;AAFG,KAAP;AAIH;;AAED,MAAIJ,EAAE,KAAK,MAAX,EAAmB;AACf,WAAO;AACHK,MAAAA,IAAI,EAAEH,+DADH;AAEHE,MAAAA,OAAO,EAAPA;AAFG,KAAP;AAIH;;AAED,MAAIJ,EAAE,KAAK,OAAX,EAAoB;AAChB,WAAO;AACHK,MAAAA,IAAI,EAAEF,gEADH;AAEHC,MAAAA,OAAO,EAAPA;AAFG,KAAP;AAIH;AACJ","sources":["webpack://damamyamamy/./src/client/components/Overlay/Overlay.js","webpack://damamyamamy/./src/client/redux/ToggleLayout/toggleLayout.actions.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { toggleLayout } from \"../../redux/ToggleLayout/toggleLayout.actions\";\n\nexport default function Overlay() {\n    const dispatch = useDispatch();\n    let state = useSelector((state) => state);\n\n    let status = state.toggleLayout.layouts[0].active || false;\n\n    const close = () => {\n        dispatch(toggleLayout({ id: \"overlay\", fn: \"close\" }));\n    };\n\n    return (\n        <div\n            className={`overlay ${status ? \"overlayIn\" : \"overlayOut\"}`}\n            onClick={close}\n        >\n            X\n        </div>\n    );\n}\n","import { TOGGLE, OPEN, CLOSE } from \"./toggleLayout.types\";\n\nexport function toggleLayout(payload) {\n    let fn = payload.fn;\n\n    if (fn === \"toggle\") {\n        return {\n            type: TOGGLE,\n            payload,\n        };\n    }\n\n    if (fn === \"open\") {\n        return {\n            type: OPEN,\n            payload,\n        };\n    }\n\n    if (fn === \"close\") {\n        return {\n            type: CLOSE,\n            payload,\n        };\n    }\n}\n"],"names":["useDispatch","useSelector","toggleLayout","Overlay","dispatch","state","status","layouts","active","close","id","fn","TOGGLE","OPEN","CLOSE","payload","type"],"sourceRoot":""}