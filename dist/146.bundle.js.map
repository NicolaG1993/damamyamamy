{"version":3,"file":"146.bundle.js","mappings":"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","sources":["webpack://damamyamamy/./src/client/components/Button/Button.js","webpack://damamyamamy/./src/client/components/Shop/Item/Item.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style/Button.css\";\n\nconst STATUS = {\n    HOVERED: \"hovered\",\n    NORMAL: \"normal\",\n};\n\nexport default function Button({ page, text, type, fn }) {\n    const [status, setStatus] = useState(STATUS.NORMAL);\n\n    const onMouseEnter = () => {\n        setStatus(STATUS.HOVERED);\n    };\n\n    const onMouseLeave = () => {\n        setStatus(STATUS.NORMAL);\n    };\n\n    const handleFunction = () => {\n        if (typeof fn === \"function\") {\n            fn();\n        } else {\n            return;\n        }\n    };\n\n    if (type === \"function\")\n        return (\n            <button\n                type=\"button\"\n                onClick={() => handleFunction()} //activate fn here! 🧨\n                className={`btn ${status}`}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                {text}\n            </button>\n        );\n\n    if (type === \"internal\")\n        return (\n            <Link to={page || \"#\"} onClick={() => handleFunction()}>\n                <button\n                    type=\"button\"\n                    className={`btn ${status}`}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                >\n                    {text}\n                </button>\n            </Link>\n        );\n\n    if (type === \"external\")\n        return (\n            <a\n                target=\"_blank\"\n                href={page || \"#\"}\n                rel=\"noopener noreferrer\"\n                onClick={() => handleFunction()}\n            >\n                <button\n                    type=\"button\"\n                    className={`btn ${status}`}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                >\n                    {text}\n                </button>\n            </a>\n        );\n\n    if (type === \"submit\")\n        return (\n            <button\n                type=\"submit\"\n                className={`btn ${status}`}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onClick={() => handleFunction()}\n            >\n                {text}\n            </button>\n        );\n}\n","import loadable from \"@loadable/component\";\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport \"./style/Item.css\";\n\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { getItem } from \"../../../redux/LoadData/loadData.actions\";\nimport Button from \"../../Button/Button\";\nconst Shortlist = loadable(() => import(\"../../Shortlist/Shortlist\"));\n\nconst loadItem = (state) => state.loadData.selectedItem;\n\nexport default function Item() {\n    let match = useRouteMatch();\n    let key = match.params.id; // item id\n    const dispatch = useDispatch();\n\n    let selectedItem = useSelector(loadItem, shallowEqual);\n\n    const [item, setItem] = useState(null);\n\n    // console.log(\"🐔 state in Item.js: \", state);\n    // console.log(\"🐔 item in Item.js: \", item);\n\n    useEffect(() => {\n        dispatch(getItem({ key: key }));\n\n        // (async () => {\n        //     const itemInfos = await commerce.products.retrieve(key);\n        //     setItem(itemInfos);\n        // })(); //is this autoinvoking? 🐔\n    }, [key]);\n\n    useEffect(() => {\n        setItem(selectedItem);\n    }, [selectedItem]);\n    // useEffect(() => {\n    //     console.log(\"🐔 item in Item.js: \", item);\n    // }, [item]);\n\n    const PicDisplay = () =>\n        item.assets.length > 1 ? (\n            <div className=\"item-pictures-wrap\">\n                <img\n                    src={item.media.source || \"test1.jpg\"}\n                    onClick={() => toggleGallery(0, true)}\n                />\n\n                <div className=\"item-pictures-small-wrap\">\n                    {item.assets.map((el, i) => (\n                        <img\n                            key={el.id}\n                            src={el.url}\n                            onClick={() => toggleGallery(i, true)}\n                        />\n                    ))}\n                </div>\n            </div>\n        ) : (\n            <img\n                src={item.media.source || \"test1.jpg\"}\n                onClick={() => toggleGallery(0, true)}\n            />\n        );\n\n    const ItemWrap = () => (\n        <div id=\"Item\">\n            <div className=\"item-wrap\">\n                <div className=\"item-pic\">\n                    <PicDisplay />\n                </div>\n                <div className=\"item-infos\">\n                    <h1>{item.name}</h1>\n                    <div className=\"item-infos-price\">\n                        <h2>{item.price.raw}€</h2>\n                        <p>IVA inclusa</p>\n                    </div>\n                    <div className={\"product-divider-small\"}> </div>\n                    <div className={\"item-infos-infos-box\"}>\n                        <div className=\"item-infos-conditions\">\n                            <span>Condizioni:</span>\n                            <div className=\"item-infos-conditions-wrap\">\n                                <h5>come nuovo</h5>\n                                <div className=\"circle\"></div>\n                            </div>\n                        </div>\n\n                        <div className=\"item-infos-infos\">\n                            <span>Categoria:</span>\n                            <p>\n                                {item.categories[0] && item.categories[0].name}\n                            </p>\n                        </div>\n\n                        <div className=\"item-infos-infos\">\n                            <span>Tags:</span>\n                            <div className=\"item-infos-infos-inner-wrap\">\n                                {item.categories[0] && (\n                                    <Link\n                                        to={{\n                                            pathname: \"/shop\",\n                                            tag: item.categories[0].name,\n                                        }}\n                                        className=\"item-tag\"\n                                    >\n                                        {item.categories[0].name}\n                                    </Link>\n                                )}\n\n                                <Link\n                                    to={{\n                                        pathname: \"/shop\",\n                                        tag: \"3/5 anni\",\n                                    }}\n                                    className=\"item-tag\"\n                                >\n                                    3/5 anni\n                                </Link>\n                            </div>\n                        </div>\n\n                        <div className=\"item-infos-infos\">\n                            <span>Disponibilitá:</span>\n                            <p>Pezzo unico</p>\n                        </div>\n                    </div>\n                    <Button\n                        page=\"/\"\n                        text=\"Aggiungi al carrello\"\n                        type=\"internal\"\n                    />\n                </div>\n            </div>\n        </div>\n    );\n\n    const ItemDescriptionWrap = () => {\n        const [infoDisplay, setInfoDisplay] = useState(\"description\");\n        const toggleInfoDisplay = (val) => {\n            setInfoDisplay(val);\n        }; //posso farlo?\n        return (\n            <section className=\"item-description-wrap\">\n                <div className=\"item-description\">\n                    <div className=\"item-description-selector\">\n                        <h3\n                            onClick={() => toggleInfoDisplay(\"description\")}\n                            className={\n                                infoDisplay === \"description\"\n                                    ? \"active-selector\"\n                                    : \"not-active-selector\"\n                            }\n                        >\n                            Descrizione\n                        </h3>\n\n                        <h3\n                            onClick={() => toggleInfoDisplay(\"infos\")}\n                            className={\n                                infoDisplay === \"infos\"\n                                    ? \"active-selector\"\n                                    : \"not-active-selector\"\n                            }\n                        >\n                            Informazioni\n                        </h3>\n                    </div>\n\n                    <div className=\"item-description-display\">\n                        {infoDisplay === \"description\" ? (\n                            <div\n                                className=\"dangerHTML-box\"\n                                dangerouslySetInnerHTML={{\n                                    __html: item.description.replace(\n                                        /\\u00a0/g,\n                                        \" \"\n                                    ),\n                                }}\n                            ></div>\n                        ) : (\n                            <p>Prodotto mai utilizzato</p>\n                        )}\n                    </div>\n                </div>\n            </section>\n        );\n    };\n\n    const ShortlistWrap = () => (\n        <section className=\"item-shortlist-wrap\">\n            {/* <h2>Articoli simili</h2> */}\n\n            <Shortlist\n                products={item.related_products}\n                listTitle=\"Articoli simili\"\n            />\n        </section>\n    );\n\n    if (item) {\n        return (\n            <Switch>\n                <Route path={match.path}>\n                    <ItemWrap />\n                    <ItemDescriptionWrap />\n                    <ShortlistWrap />\n                </Route>\n            </Switch>\n        );\n    }\n\n    if (!item) {\n        return (\n            <div className=\"item-wrap\">\n                <div className=\"loader\"></div>\n            </div>\n        );\n    }\n}\n"],"names":["useState","Link","STATUS","HOVERED","NORMAL","Button","page","text","type","fn","status","setStatus","onMouseEnter","onMouseLeave","handleFunction","loadable","useEffect","Switch","Route","useRouteMatch","useDispatch","useSelector","shallowEqual","getItem","Shortlist","loadItem","state","loadData","selectedItem","Item","match","key","params","id","dispatch","item","setItem","PicDisplay","assets","length","media","source","toggleGallery","map","el","i","url","ItemWrap","name","price","raw","categories","pathname","tag","ItemDescriptionWrap","infoDisplay","setInfoDisplay","toggleInfoDisplay","val","__html","description","replace","ShortlistWrap","related_products","path"],"sourceRoot":""}