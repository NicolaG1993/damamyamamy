{"version":3,"file":"146.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;;;;AAEA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,QAAN,CAAeC,YAA1B;AAAA,CAAjB;;AAEe,SAASC,IAAT,GAAgB;AAC3B,MAAIC,KAAK,GAAGV,yEAAa,EAAzB;AACA,MAAIW,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAAvB,CAF2B,CAEA;;AAC3B,MAAMC,QAAQ,GAAGb,kEAAW,EAA5B;AAEA,MAAIO,YAAY,GAAGN,kEAAW,CAACG,QAAD,EAAWF,+DAAX,CAA9B;;AAEA,kBAAwBR,+CAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOoB,IAAP;AAAA,MAAaC,OAAb,iBAP2B,CAS3B;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,IAApC;AAEAnB,EAAAA,gDAAS,CAAC,YAAM;AACZkB,IAAAA,QAAQ,CAACV,mFAAO,CAAC;AAAEO,MAAAA,GAAG,EAAEA;AAAP,KAAD,CAAR,CAAR,CADY,CAGZ;AACA;AACA;AACA;AACH,GAPQ,EAON,CAACA,GAAD,CAPM,CAAT;AASAf,EAAAA,gDAAS,CAAC,YAAM;AACZoB,IAAAA,OAAO,CAACR,YAAD,CAAP;AACH,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,MAAIO,IAAJ,EAAU;AACN,wBACI,uDAAC,8DAAD;AAAA,6BACI,uDAAC,6DAAD;AAAO,YAAI,EAAEL,KAAK,CAACS,IAAnB;AAAA,+BACI;AAAK,YAAE,EAAC,MAAR;AAAA,iCACI;AAAK,qBAAS,EAAC,WAAf;AAAA,oCACI;AAAK,uBAAS,EAAC,YAAf;AAAA,sCACI;AAAA,qCAAUJ,IAAI,CAACK,IAAf;AAAA,gBADJ,eAEI;AAAA,uCACaL,IAAI,CAACM,MADlB,gBAEKN,IAAI,CAACO,QAFV;AAAA,gBAFJ,eAMI;AAAA,sCAAWP,IAAI,CAACQ,KAAhB;AAAA,gBANJ,eAOI;AAAA,0CAAeR,IAAI,CAACS,OAApB;AAAA,gBAPJ,eAQI;AAAA,oCAAST,IAAI,CAACU,GAAd;AAAA,gBARJ,eASI;AAAA,sCAAWV,IAAI,CAACW,KAAhB;AAAA,gBATJ,EAUKX,IAAI,CAACY,WAAL,iBACG;AAAA,6CAAkBZ,IAAI,CAACY,WAAvB;AAAA,gBAXR;AAAA,cADJ,eAeI;AAAK,uBAAS,EAAC;AAAf,cAfJ;AAAA;AADJ;AADJ;AADJ,MADJ;AAyBH;;AAED,MAAI,CAACZ,IAAL,EAAW;AACP,wBACI;AAAK,eAAS,EAAC,WAAf;AAAA,6BACI;AAAK,iBAAS,EAAC;AAAf;AADJ,MADJ;AAKH;AACJ","sources":["webpack://damamyamamy/./src/client/components/Shop/Item/Item.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport \"./style/Item.css\";\n\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { getItem } from \"../../../redux/LoadData/loadData.actions\";\n\nconst loadItem = (state) => state.loadData.selectedItem;\n\nexport default function Item() {\n    let match = useRouteMatch();\n    let key = match.params.id; // item id\n    const dispatch = useDispatch();\n\n    let selectedItem = useSelector(loadItem, shallowEqual);\n\n    const [item, setItem] = useState(null);\n\n    // console.log(\"🐔 state in Item.js: \", state);\n    console.log(\"🐔 item in Item.js: \", item);\n\n    useEffect(() => {\n        dispatch(getItem({ key: key }));\n\n        // (async () => {\n        //     const itemInfos = await commerce.products.retrieve(key);\n        //     setItem(itemInfos);\n        // })(); //is this autoinvoking? 🐔\n    }, [key]);\n\n    useEffect(() => {\n        setItem(selectedItem);\n    }, [selectedItem]);\n\n    if (item) {\n        return (\n            <Switch>\n                <Route path={match.path}>\n                    <div id=\"Item\">\n                        <div className=\"item-wrap\">\n                            <div className=\"item-infos\">\n                                <p>Name: {item.name}</p>\n                                <p>\n                                    Animal: {item.animal} animalID#\n                                    {item.animalID}\n                                </p>\n                                <p>Breed: {item.breed}</p>\n                                <p>Breed ID: #{item.breedID}</p>\n                                <p>Age: {item.age} y.o.</p>\n                                <p>Color: {item.color}</p>\n                                {item.skinTexture && (\n                                    <p>Skin texture: {item.skinTexture}</p>\n                                )}\n                            </div>\n                            <div className=\"item-pic\"></div>\n                        </div>\n                    </div>\n                </Route>\n            </Switch>\n        );\n    }\n\n    if (!item) {\n        return (\n            <div className=\"item-wrap\">\n                <div className=\"loader loader-alternative1\"></div>\n            </div>\n        );\n    }\n}\n"],"names":["useState","useEffect","Switch","Route","Link","useRouteMatch","useDispatch","useSelector","shallowEqual","getItem","loadItem","state","loadData","selectedItem","Item","match","key","params","id","dispatch","item","setItem","console","log","path","name","animal","animalID","breed","breedID","age","color","skinTexture"],"sourceRoot":""}