{"version":3,"file":"119.bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,IAAME,eAAe,GAAGF,sEAAQ,CAAC;AAAA,SAC7B,mGAD6B;AAAA,CAAD,CAAhC;AAIA;;;;AACA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2B,CAA3B,CAAX;AAAA,CAAtB;;AAEA,IAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADU,EAKV;AACID,EAAAA,EAAE,EAAE,QADR;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALU,EASV;AACID,EAAAA,EAAE,EAAE,SADR;AAEIC,EAAAA,KAAK,EAAE;AAFX,CATU,EAaV;AACID,EAAAA,EAAE,EAAE,OADR;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAbU,EAiBV;AACID,EAAAA,EAAE,EAAE,UADR;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAjBU,CAAd;AAuBe,SAASC,GAAT,OAA2B;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACtC,MAAIP,KAAK,GAAGH,kEAAW,CAACE,aAAD,EAAgBD,+DAAhB,CAAvB;AACA,MAAIU,WAAW,GAAGR,KAAK,CAACS,MAAxB;AAEA,sBACI;AAAK,aAAS,EAAED,WAAW,GAAG,QAAH,GAAc,EAAzC;AAAA,4BACI;AAAA,gBACKL,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,4BACP;AAAA,iCACI,uDAAC,4DAAD;AAAM,cAAE,EAAED,IAAI,CAACP,EAAf;AAAmB,mBAAO,EAAE;AAAA,qBAAMG,QAAQ,EAAd;AAAA,aAA5B;AAAA,sBACKI,IAAI,CAACN;AADV;AADJ,WAASO,CAAT,CADO;AAAA,OAAV;AADL,MADJ,eAUI,uDAAC,eAAD;AAAiB,cAAQ,eAAE;AAAK,iBAAS,EAAC;AAAf;AAA3B,MAVJ;AAAA,IADJ;AAcH","sources":["webpack://damamyamamy/./src/client/components/Header/Nav/Nav.js"],"sourcesContent":["import loadable from \"@loadable/component\";\nimport { Link } from \"react-router-dom\";\nimport \"./style/Nav.css\";\nconst ColorModeButton = loadable(() =>\n    import(\"../../ColorModeButton/ColorModeButton\")\n);\n\nimport { useSelector, shallowEqual } from \"react-redux\";\nconst selectLayouts = (state) => state.toggleLayout.layouts[1];\n\nconst links = [\n    {\n        to: \"/\",\n        title: \"Home\",\n    },\n    {\n        to: \"/about\",\n        title: \"About\",\n    },\n    {\n        to: \"/topics\",\n        title: \"Topics\",\n    },\n    {\n        to: \"/shop\",\n        title: \"Shop\",\n    },\n    {\n        to: \"/contact\",\n        title: \"Contact\",\n    },\n];\n\nexport default function Nav({ closeNav }) {\n    let state = useSelector(selectLayouts, shallowEqual);\n    let navIsActive = state.active;\n\n    return (\n        <nav className={navIsActive ? \"nav-on\" : \"\"}>\n            <ul>\n                {links.map((link, i) => (\n                    <li key={i}>\n                        <Link to={link.to} onClick={() => closeNav()}>\n                            {link.title}\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n            <ColorModeButton fallback={<div className=\"loader\" />} />\n        </nav>\n    );\n}\n"],"names":["loadable","Link","ColorModeButton","useSelector","shallowEqual","selectLayouts","state","toggleLayout","layouts","links","to","title","Nav","closeNav","navIsActive","active","map","link","i"],"sourceRoot":""}